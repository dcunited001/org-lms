#+TODO: TODO(t) | READY(r)  SENT (s)
#+COURSE "RLG231"
#+PROPERTY: GRADE 0 
#+PROPERTY: COURSE (:name "hello" :id 2456)
*  Set Up Course Properties                                            

To begin with, we have to tell ~org-lms~ a few things about the course and its assignments. This will allows us to talk to the Canvas instance via its API and associate the local info with the hidden keys that the API uses to ingerpret requests.

The following code does a few things:

- sets the base URL for all API requests
- retrieves the token from its storage place (probably best to use some other store, but this is the one I was able to get working!)
- sets up the global ~org-lms-courses~ variable, which probably should be stored more centrally somehow.
- gets the local assignment definition, and merges them with the assignments on Canvas
- retrieves the student list from Canvas, and checks for a locally stored student list that may contain extra information (e.g., github logins and nicknames,, often important for Asian students especially)
- generates a table with a number of org-mode links that allow you to interact with the API and also to generate grading subtrees for each assignment
#+begin_src emacs-lisp
  (make-local-variable 'org-use-property-inheritance)
  (setq 'org-use-property-inheritance t)
  (setq org-lms-baseurl "https://q.utoronto.ca/api/v1/")
  (setq org-lms-token (password-store-get "q.utoronto.ca"))

  (setq org-lms-courses
        '(
          (wildwater .
                     (:shortname "Wild Waters"
                                 :coursenum "NEW271"
                                 :semester "20189"
                                 ))))
  (setq org-lms-course (org-lms-get-courseid (alist-get 'wildwater  org-lms-courses)))
  (setq org-lms-local-assignments
        '(
          (darwin .
                  (:name "Response Paper 1"
                         :directory "response-paper-1"
                         :weight 0.10
                         :grade-type "letter"
                         :submisison-type "email"
                         :rubric-list ("Organization" "Clarity of Argument"
                                       "Grammar and Spelling" "Grade"
                                       "See Attached Paper for further Comments")
                         ))
          (test .
                (:name "Test Assignment"
                       :directory "response-paper-1"
                       :weight 0.10
                       :grade-type "letter"
                       :submisison-type "canvas"
                       :rubric-list ("Organization" "Clarity of Argument"
                                     "Grammar and Spelling" "Grade"
                                     "See Attached Paper for further Comments")
                       ))))
  (org-lms-setup)
  ;;(org-lms-merge-assignment-values)
  ;; (org-lms-merge-student-lists)
  ;;(org-lms-get-students)
        ;;; (org-lms-get-courseid org-lms-course)
  ;; (org-lms-merge-student-lists)
  ;; (org-lms-get-students)
  ;;(setq org-lms-merged-students (org-lms-merge-student-lists))
  ;;(setq org-lms-merged-assignments (org-lms-merge-assignment-values))
  ;; (org-lms-assignments-table org-lms-merged-assignments org-lms-merged-students)
#+end_src

#+RESULTS:
| Name (upload here) | Download URL         | Inspect               | Make Headers   |
|--------------------+----------------------+-----------------------+----------------|
| [[https://q.utoronto.ca/courses/64706/assignments/88373][Test Assignment]]    | [[https://q.utoronto.ca/courses/64706/assignments/88373/submissions?zip=1][Download Submissions]] | [[elisp:(org-lms-canvas-inspect "courses/64706/assignments/88373")][Inspect Original JSON]] | [[elisp:(org-lms-make-headings (alist-get 'test org-lms-merged-assignments) org-lms-merged-students)][Make Headlines]] |
| Response Paper 1   |                      |                       | [[elisp:(org-lms-make-headings (alist-get 'darwin org-lms-merged-assignments) org-lms-merged-students)][Make Headlines]] |



